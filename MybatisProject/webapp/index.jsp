<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
</head>
<body>

	<h1>안녕 나는 웰컴파일이야</h1>
	<!-- 
		* Framework(프레임워크)
		
		- 개발자가 보다 편리한 환경에서 개발할 수 있도록 제공하는 뼈대, 틀
		- 소프트웨어 개발 입장에서는 공통으로 사용하는 라이브러리 / 개발도구 / 인터페이스 등등..
		
		* 왜 프레임워크를 사용해야 하는가?
		- 과거에 비해서 개발하는 웹의 규도가 커짐
		- 크고 복잡도가 높은 프로젝트를 완성시키기 위해서는 많은 사람들이 필요함
		- 개발자들이 "통일성"있게 "빠르고", "안정적"으로 개발하기 위한 한 가지 방법으로 프레임워크가 좋은 성과를 내고 있음
		- 생산성 향상에 큰 도움이 된다.
		
		* 프레임워크의 특징
		- 자유롭게 설계하고 코드를 짜는것이 아니라 프레임워크가 제공하는 가이드대로 설계하고 코드를 작성해야함(세팅도)
		- 개발할 수 있는 범위가 정해져있음
		- 다양한 도구 / 플러그인들을 지원함
		
		* 장 / 단점
		> 장점 : 개발시간을 줄일 수 있음
			      오류로부터 자유로워 질 수 있음
		> 단점 : 습득하는 것에 시간이 오래 걸릴수 있음
		              너무 의존하다보면 개발능력이 떨어져서 프레임워크 없이 개발하는것이 어려워짐 
		
		* 종류
		- 영속성(지속성) : 데이터 관련(CRUD)기능들을 편리하게 작업할 수 있도록 도와주는 프레임워크
					  ex) MyBatis, Hibernate 
		- 자바 : 웹 어플리케이션에 초점을 맞춰 필요한 요소들을 모듈화 해서 제공해주는 프레임워크
			  ex) Spring, SpringBoot, Structs...
			  
		- 화면 구현 : Front-end 를 구현할 수 있게 틀을 제공해주는 프레임워크
			     ex) BootStrap, Vue, Angular...   	  
		- 기능 및 지원 : 특정 기능이나 업무수행에 도움을 주는 기능을 제공해주는 프레임워크
			        ex) Log4j, JUnit...	  
	 
	 -->
	 <!-- action태그 포워딩 -->
	 <jsp:forward page="WEB-INF/views/main.jsp" />
	 
	 
	 
</body>
</html>
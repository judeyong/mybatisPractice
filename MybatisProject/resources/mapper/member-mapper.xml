<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <!-- 전체가 mapper 태그로 감싸져 있어야 함 -->
  <mapper namespace="memberMapper" >
  <!-- namespace : 해당 mapper파일의 고유한 별칭 -->
  	
  	<!-- 
  		* DML일 경우
  		<insert id="각 SQL문의 식별자" parameterType="전달받을 자바타입(풀클래스명) 혹은 별칭" >
  			쿼리문 작성
  		</insert>
  		<update></update>
  		<delete></delete>
  		
  		* SELECT일 경우
  		<select id="각 SQL문 식별자"
  				parameterType="전달받을 자바타입(풀클래스명) 혹은 별칭"
  				resultType="조회 결과를 반환하는 자바 타입"
  				resultMap="조회 결과를 뽑아서 맵핑할 resultMap의 id"
  		>
  			쿼리문작성
  		</select>
  		
  		=> parameterType 속성은 전달받을 값이 없다면 생략 가능!
  		=> SELECT문 같은 경우 결과가 SELECT문의 형태에 따라서 다를 수 있기 때문에
  		=> :: count(*) => 정수/ 중복체크 => 문자열
  		=> ***** 반드시 resultType(자바에서 제공하는 자료형 또는 내가 만든 별칭) 또는
  		=> resultMap(내가 만든 resultMap)으로 결과에 따른 타입을 지정해줘여함
  		
  		========================================================================
  		
  		그 동안 pstmt객체를 이용해서 ?(위치홀더) 를 사용했지만
  		앞으로는 위치홀더 대신 해당 sql문에 전달된 객체로부터 값을 꺼내서 사용
  		값을 꺼내는 방법 #{ 필드명 또는 변수명 또는 map의 키값}을 이용
  		내부적으로 getter메소드를 호출
  		
  	 -->
  	
  	<insert id="insertMember" parameterType="com.kh.mybatis.member.model.vo.Member">
  		INSERT
  		  INTO
  		      MEMBER
  		      (
  		       USER_NO,
  		       USER_ID,
  		       USER_PWD,
  		       USER_NAME,
  		       EMAIL,
  		       BIRTHDAY,
  		       GENDER,
  		       PHONE,
  		       ADDRESS
  		      )
  		VALUES(
  				SEQ_UNO.NEXTVAL,
  				#{userId},
  				#{userPwd},
  				#{userName},
  				#{email},
  				#{birthday},
  				#{gender},
  				#{phone},
  				#{address}
  		 	  )     
  	</insert>
  	
  	<!-- 
  		* resultMap : 마이바티스의 가장 중요하고 강력한 요소
  					  ResultSet으로부터 조회된 컬럼값을 하나씩 뽑아서
  					    내가 지정한 VO객체에 각 필드에 담은 JDBC코드를 줄여주는 역할 수행
  		
  		<resultMap id="식별자" type="조회된 결과를 담아서 반환하고자하는 VO객체의 타입(풀클래스명) 혹은 별칭" >
  			<result column="조회된 결과를 뽑고자하는 DB컬럼명"
  				ex)rset.getString("userId)해당함
  			 	property="해당 결과를 담는 필드명"
  			 	ex) member.setUserId() 해당함/>
  			 	
  			<result column="조회된 결과를 뽑고자하는 DB컬럼명" property="해당 결과를 담는 필드명" />
  		</resultMap>
  		
  		if(rset.next()){
  			Member member = new Member();
  			member.setUserId(rset.getString("userId));
  			membersetUserPwd(rset.getString("userPwd));
  		}
  		
  	 -->
  	 <!-- typeAliases에 등록된 type 별칭 넣음 -->
  	 <!-- 내부적으로 property값에 해당하는 setter메소드를 찾아서 호출 -->
  	 <!-- userNo ==> setUserNo() -->
  	 
  	<resultMap id="memberResultSet" type="member">
  		<result column="USER_NO" property="userNo" />
  		<result column="USER_ID" property="userId" />
  		<result column="USER_PWD" property="userPwd" />
  		<result column="USER_NAME" property="userName" />
  		<result column="EMAIL" property="email" />
  		<result column="BIRTHDAY" property="birthday" />
  		<result column="GENDER" property="gender" />
  		<result column="PHONE" property="phone" />
  		<result column="ADDRESS" property="address" />
  		<result column="ENROLL_DATE" property="enrollDate" />
  		<result column="MODIFY_DATE" property="modifyDate" />
  		<result column="STATUS" property="status" />
  	</resultMap>
  
  	<!-- 
  	<select id="login" parameterType="com.kh.mybatis.member.model.vo.Member"
  		resultType="com.kh.mybatis.member.model.vo.Member">
  	-->
  	<select id="login" parameterType="member" resultMap="memberResultSet">
  		SELECT
   			  USER_NO,-- userNo,
   			  USER_ID,-- userId,
   			  USER_PWD,-- userPwd,
   			  USER_NAME,-- userName,
   			  EMAIL,
   			  BIRTHDAY,
   			  GENDER,
   			  PHONE,
   			  ADDRESS,
   			  ENROLL_DATE,-- enrollDate,
   			  MODIFY_DATE,-- modifyDate,
   			  STATUS
   		  FROM
   		      MEMBER
   		 WHERE
   		      USER_ID = #{userId}
   		   AND
   		      USER_PWD = #{userPwd}
   		   AND
   		      STATUS = 'Y'          
  	</select>
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  </mapper>